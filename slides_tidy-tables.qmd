- we can (barely) cover the most basic functionality

- don't stress -- things snowball

- self-study and self-directed study (increasingly rare but important to be independent scientists)

- you are going to play the creative part of the course as much as I am

- I am working with this data set for the first time ever, just as you are
  - I may have more technical know how to get going, but we're on an equal
  footing as far as the data itself is concerned, and the questions that
  can be asked about it
  
- promise me you'll ask me a question first, before you look up solution

- how I would approach analyzing a new popgen data set (for real, because
you're exercises will be retracing 1:1 my own steps as I worked with the
IBD data for the first time ever)

- experiment, experiment, experiment! R console workflow (read-eval-print-loop)
is incredibly powerful, so take advantage of this!

- the number of things to REALLY know and remember is surprisingly small
  - what distinguish a newbie from an expert is a repetition and experience,
    not the amount of things to remember (I have a horrible memory and remember
    almost nothing unless I did it hundreds of times)
  - every single exercise captures something about my own personal R application
  which I do almost every single day (and I've been writing R for a living for
  many years now)

# Take home message

It's worth acknowledging that developing code as proper functions, using iteration,
and generally think about solving problems using "proper" program approaches
like that is a lot of work. It might seem that "just copying a bit of code
a couple of times" is easier. In the moment, it actually is.

Except we rarely, if ever, do things only once. We have to come back to old
scripts, update them, or add new steps. Doing this for every single bit of
copy pasted code (sometimes in multiple scripts) is awful, and almost always
results in bugs. Even missing one edit in one copy of a piece of code will
make our results wrong.

**It's always worth investing a bit extra time into extracting repeated
pieces of code into individual functions. It will always result in _less work_
in the long run.**
