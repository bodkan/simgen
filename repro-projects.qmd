# Structuring computation (R) projects

## Introduction

You've done a huge amount of programming already. Processing data,
filtering data, annotating data, summarizing data, but also plotting data
using the most powerful tool for scientific visualization _ggplot2_! I
said it before but it's worth repeating again---having been introduced to
_tidyverse_ table manipulation and _ggplot2_ over the past couple of days,
you've learned 80% of tools you might need to do data science on a day-to-day
basis. Sure, you might not remember everything, but remembering comes from
repetition and practice. You've been exposed to the most important concepts,
you know where to come back for more information when needed later.

**In this session on reproducibility, we will take things a bit easier. Instead
of focusing on programming techniques and various functions, we'll go through
guidelines on how to organize (and run) computational projects on a practical
basis--taking _what_ you've learned, and learning _how_ to do it in practice.**

Rather than going through building _tidyverse_ and _ggplot2_ pipelines on
new data (again), you will be practicing reproducibility concepts in one of the
following two ways, **depending on the level of your confidence and comfort:**

1. **You can take already established bits of code (currently scattered
over multiple separate scripts and files or even nowhevere because you
experimented in the R console -- all these approaches were OK so far!), or**

2. **you can take your own data, and your own scripts...**

**... and using code and data from 1. or 2., you will learn about the
possibilities to organize your computational projects in the best possible
way, both for yourself now, yourself in the future, or others who might
pick up your projects at a later point.**

**In the next session, we will explore two possibilities of how to _present_
your results in a 100% reproducible, reliable way, either in form of slides
(such as for group meeting updates) or reports (as your research notebooks).**

## Exercise 1: Creating an R project

1. Click `File` `->` `New project...`
2. In the new window, click on `New Directory` `->` `New Project`
3. Under "Directory name" type in "simgen-project" (the name of our course,
and the directory where all project files will be stored). Pick where you
would like to save that directory (this doesn't matter, just put the project
somewhere you can later find it :)). Check the "Open in new session", leave
the other options ("git" and "renv") unchecked.

4. Then click on the "Create Project" button.

**This will create a new RStudio window. Your original RStudio window
(where you worked so far is still open). You task now is to convert the
(probably disorganized) bits of code into a "proper reproducible R project".

## Exercise 2: Create "pipeline components"

