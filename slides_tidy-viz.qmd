---
format:                         ### slides
  revealjs:                     ### slides
    echo: true                  ### slides
    code-line-numbers: false    ### slides
    fig-align: center           ### slides
    slide-number: true          ### slides
    self-contained: true        ### slides
---

# Visualization with _ggplot2_

(A few remarks and tips before the practical session)

# R is the best technology for doing computational science

<p align="right">(Subjectively.)</p>

# _ggplot2_ is the most powerful visualization framework

<p align="right">(Objectively.)</p>

## _ggplot2_ is a core _tidyverse_ package

<center>![](files/r-bootcamp/packages_tidyverse.png){width="50%"}</center>

## "Grammar of Graphics"

A formal syntax and grammar for describing visualizations

<center>![](files/tidy-viz/gog_cover.jpg){width="33%"}</center>

. . .

<center>What does this mean?</center>

## Let's consider base R plotting

<br>

```{r}
#| echo: false
library(dplyr)
```

```{r}
library(palmerpenguins)

glimpse(penguins[1:4, ])
```

## A base R histogram

```{r}
#| fig-align: center
hist(penguins$body_mass_g)
```

## A base R histogram

```{r}
#| fig-align: center
hist(penguins$body_mass_g, xlim = c(2000, 8000))
```


## A base R histogram

```{r}
#| fig-align: center
hist(penguins$body_mass_g, xlim = c(2000, 8000), ylim = c(0, 100))
```



## A base R histogram

```{r}
#| fig-align: center
hist(penguins$body_mass_g, xlim = c(2000, 8000), ylim = c(0, 100),
     main = "Histogram of body mass of penguins")
```



## A base R histogram

```{r}
#| fig-align: center
hist(penguins$body_mass_g, xlim = c(2000, 8000), ylim = c(0, 100),
     main = "Histogram of body mass of penguins",
     xlab = "Body mass [grams]")
```



## A base R histogram

```{r}
#| fig-align: center
hist(penguins$body_mass_g, xlim = c(2000, 8000), ylim = c(0, 100),
     main = "Histogram of body mass of penguins",
     xlab = "Body mass [grams]", ylab = "Count of individuals")
```



## A base R histogram

```{r}
#| fig-align: center
hist(penguins$body_mass_g, xlim = c(2000, 8000), ylim = c(0, 100),
     main = "Histogram of body mass of penguins",
     xlab = "Body mass [grams]", ylab = "Count of individuals",
     col = "black", border = "white")
```




## A base R histogram

```{r}
#| code-fold: true
#| fig-align: center
par(mfrow = c(1, 3))

species_1 <- filter(penguins, species ==  "Adelie")
hist(species_1$body_mass_g, xlim = c(2000, 8000), ylim = c(0, 100),
     main = "Species 'Adelie'",
     xlab = "Body mass [grams]", ylab = "Count of individuals",
     col = "darkgreen", border = "white")

species_2 <- filter(penguins, species ==  "Chinstrap")
hist(species_2$body_mass_g, xlim = c(2000, 8000), ylim = c(0, 100),
     main = "Species 'Chinstrap'",
     xlab = "Body mass [grams]", ylab = "Count of individuals",
     col = "darkblue", border = "white")

species_3 <- filter(penguins, species ==  "Gentoo")
hist(species_3$body_mass_g, xlim = c(2000, 8000), ylim = c(0, 100),
     main = "Species 'Gentoo'",
     xlab = "Body mass [grams]", ylab = "Count of individuals",
     col = "darkorange", border = "white")
```

# 

<center>Base R plots use a single function and specify
(a huge) number of optional parameters which change their
"aesthetic" properties and visual elements.</center>

. . .

<br>
<center>**Creating a new figure (from the same data even) requires us
to write usually a completely different code.**</center>